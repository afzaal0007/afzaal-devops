apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=24h
          image: stefanprodan/swarmprom-prometheus:v2.5.0
          name: prometheus
          resources:
            limits:
              memory: "2147483648"
            requests:
              memory: "134217728"
          volumeMounts:
            - mountPath: /etc/prometheus/swarm_node.rules.yml
              name: node-rules
              subPath: swarm_node.rules.yml
            - mountPath: /etc/prometheus/swarm_task.rules.yml
              name: task-rules
              subPath: swarm_task.rules.yml
            - mountPath: /prometheus
              name: prometheus
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: swarm_node.rules.yml
                path: swarm_node.rules.yml
            name: node-rules
          name: node-rules
        - configMap:
            items:
              - key: swarm_task.rules.yml
                path: swarm_task.rules.yml
            name: task-rules
          name: task-rules
        - name: prometheus
          persistentVolumeClaim:
            claimName: prometheus
status: {}
