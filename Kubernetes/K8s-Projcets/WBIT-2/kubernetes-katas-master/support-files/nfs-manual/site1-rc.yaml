# This pod mounts the nfs volume claim into /usr/share/nginx/html and
# serves a simple web page.

apiVersion: v1
kind: ReplicationController
metadata:
  name: site1-nginx
spec:
  replicas: 2
  selector:
    role: web-frontend
  template:
    metadata:
      labels:
        role: web-frontend
    spec:
    
      # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
      securityContext:
        # Can't use runAsUser or runAsGroup to use this image,
        #   because the web server (nginx or apache) will first start as root,
        #   and only then, it will create the child processes as a normal user.
        #   Setting runAsUser or runAsGroup will not allow the container to start.
        # 101 is id of nginx user
        # 33 is ID of user www-data on debian systems (apache runs as www-data)
        # 48 is ID of user apache on centos systems
        # 
        # Note 1: fsgroup can only be applied on Pod-level securityContext, 
        #         not on container level.
        fsGroup: 101
        #
        # Note 2: fsGroup "DOES NOT WORK" on NFS
        #         We need to use the initContainer approach.
        #         volumes.https://github.com/kubernetes/examples/issues/260        

      initContainers:
        - name: nfs-ownership-fixer
          image: alpine
          resources:
            limits:
              cpu: 10m
              memory: 10Mi
            requests:
              cpu: 5m
              memory: 5Mi           
          securityContext:
            # Run the initContainer as root, 
            #   so we can change ownership and permissions of the nfs volume. 
            runAsUser: 0
          volumeMounts:
          - name: vol-nfs
            mountPath: /nfs
          command:
          - sh
          - -c
          - (chown -R 101:101 /nfs)
          # - (chown -R 33:33 /nfs; chmod 0775 /nfs)

      containers:
      - name: nginx
        image: nginx:alpine
        ports:
          - name: http
            containerPort: 80
            
        resources:
          limits:
            cpu: 2m
            memory: 10Mi
          requests:
            cpu: 1m
            memory: 5Mi            

        volumeMounts:
            # name must match the volume name below
            - name: vol-nfs
              mountPath: "/usr/share/nginx/html"

      volumes:
      - name: vol-nfs
        persistentVolumeClaim:
          claimName: pvc-nfs-site1
