Kafka

Producer = Produce data

Broker = Kafka Server

Kafka = cluster conatins multiple brokers

Producer -> Brokcer -> Consumer

topic = type of data or Message = Particular data stream = topic is a logical constrcut

a new message append in the tail of the topic 

topic can be consider a sort of log file

Partition = subsection of topic = Physical constrcut = unit of measure

Distributed kafka server = distrubuted topics


ZooKeeper = choosing the Leader or main kafka = Managing the broker and kafka cluster = 3 or 5 or should be in ODD numbers


bocker and partitions are replicated accross cluster for FT

brocker = Leaders & Followers

One brooker Cloud be the Leader for One topic on the partition && Other Brocker can be a leader on another for another topic on another partition


Broker Rack Awerness = one Az = One Zone = Idealy = Brocker.Rack.Settings

Message Ordering = One Consumer can read from one Topic Partition at a time 


Partition Key = User.ID  Or Some Unique Identifier for Producers to write data


broker acknowlegment = acknowlegment from all brokers


acknowledge mode in kafka

duplication issues in kafka  = double ackdlegement = message duplication in kafka

Leader = with leaset node number i.e node 0 is the leader in the cluster from node 0 to node 10


Replication factor = 3, Kafka will create 3 replica of each partition

JPS = Command to check the Demons are running

QuromPeerMain = ZooKeeper Demon
Kafka Deamon


Prducer => starts with Producer.sh or Producer.bat and have Producer.properties files

Consumer => starts with Consumer.sh or COnsumer.bat and have Consumer.properties files

ZooKeeper => starts with ZooKeeper.sh or ZooKeeper.bat and have ZooKeeper.properties files

Server.Properties for Producer = Paramters to change for Multi brokcer single node cluster

Broker.id = 0 to Broker.id = 1

log.directory = /tmp/kafka.log1

PortNo = 9092 => PortNo = 9093


start Kafka Server/broker

kafka-Server-Start.sh kafka/config/server.properties


Create Topic =

kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 -- topic example1


List Topics =

kafka-topics.sh --list --zookeeper localhost:2181


start producer =

kafka-console-producer.sh --brocker-list localhost:9092 --topic example1


start Consumer =

kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic Example1 --from-beginning

start zookeeper =

zookeeper-server-start.sh kafka/config/zookeeper.properties

kafka-server-start.sh kafka/config/server.properties


broker = config/server.properties


Multi Brocker=  

cd kafka/config

cp server.properties server1.properties
cp server.properties server2.properties


brokcer.id =1								
listeners=PLAINTEXT://:9093
log.dirs=/tmp/kafka-logs1

brokcer.id =2
listeners=PLAINTEXT://:9094
log.dirs=/tmp/kafka-logs2


start 2 broker on 1 node

kafka-Server-Start.sh kafka/config/server1.properties
kafka-Server-Start.sh kafka/config/server2.properties


Create Topic 2 = Example2

kafka-topics.sh --create -- topic example2 --zookeeper localhost:2181 --replication-factor 2 --partitions 3 
